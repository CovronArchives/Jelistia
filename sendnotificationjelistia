local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")

local notifications = {}

local function updateNotifications()
    for i, notifData in ipairs(notifications) do
        local targetY = -120 - ((i - 1) * 90)
        local startTime = tick()

        local connection
        connection = RunService.RenderStepped:Connect(function()
            local elapsedTime = tick() - startTime
            if notifData.notification.Parent then
                notifData.notification.Position = UDim2.new(1, -270, 1, targetY + math.sin(elapsedTime * 2) * 3)
            else
                connection:Disconnect()
            end
        end)

        notifData.connection = connection
    end
end

local function createNotification(title, text, duration)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = CoreGui

    local notification = Instance.new("Frame")
    notification.Size = UDim2.new(0, 250, 0, 80)
    notification.Position = UDim2.new(1, -270, 1, -120)
    notification.BackgroundColor3 = Color3.fromRGB(128, 0, 128)
    notification.BackgroundTransparency = 1
    notification.BorderSizePixel = 0
    notification.Parent = screenGui
    notification.AnchorPoint = Vector2.new(0, 1)

    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 10)
    uiCorner.Parent = notification

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -20, 0, 18)
    titleLabel.Position = UDim2.new(0, 10, 0, 5)
    titleLabel.Text = title
    titleLabel.TextSize = 16
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = notification

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, -20, 1, -35)
    textLabel.Position = UDim2.new(0, 10, 0, 25)
    textLabel.Text = text
    textLabel.TextSize = 14
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.BackgroundTransparency = 1
    textLabel.TextWrapped = true
    textLabel.TextYAlignment = Enum.TextYAlignment.Top
    textLabel.Parent = notification

    local slider = Instance.new("Frame")
    slider.Size = UDim2.new(1, 0, 0, 4)
    slider.Position = UDim2.new(0, 0, 1, -4)
    slider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    slider.Parent = notification

    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(1, 0)
    sliderCorner.Parent = slider

    local fadeInTween = TweenService:Create(notification, TweenInfo.new(0.5), {BackgroundTransparency = 0.2})
    fadeInTween:Play()

    table.insert(notifications, {notification = notification})

    updateNotifications()

    local sliderTween = TweenService:Create(slider, TweenInfo.new(duration), {Size = UDim2.new(0, 0, 0, 4)})
    sliderTween:Play()

    task.delay(duration, function()
        local fadeOutTween = TweenService:Create(notification, TweenInfo.new(0.5), {BackgroundTransparency = 1})
        fadeOutTween:Play()

        fadeOutTween.Completed:Connect(function()
            for i, notifData in ipairs(notifications) do
                if notifData.notification == notification then
                    if notifData.connection then
                        notifData.connection:Disconnect()
                    end
                    table.remove(notifications, i)
                    break
                end
            end

            screenGui:Destroy()
            updateNotifications()
        end)
    end)
end
